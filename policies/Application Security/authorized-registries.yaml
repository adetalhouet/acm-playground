apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: authorized-registries
  annotations:
    policy.open-cluster-management.io/standards: Application security
    policy.open-cluster-management.io/categories: Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: image-policy-example
        spec:
          remediationAction: enforce
          severity: low
          pruneObjectBehavior: DeleteIfCreated
          namespaceSelector:
            exclude: ["kube-*","openshift-*"]
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: config.openshift.io/v1
                kind: Image
                metadata:
                  name: cluster
                spec:
                  registrySources:
                    allowedRegistries:
                    - registry.redhat.io
                    - registry.access.redhat.com
                    - docker.io
                    - quay.io
                    - gcr.io
                    - ghcr.io
                    - image-registry.openshift-image-registry.svc
                    containerRuntimeSearchRegistries:
                    - docker.io
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-authorized-registries
placementRef:
  name: placement-authorized-registries
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: authorized-registries
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-authorized-registries
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - {key: governanceEnabled, operator: In, values: ["True"]}

